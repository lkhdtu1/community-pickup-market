#!/bin/bash
# Live Testing Script for Community Pickup Market
# Run this after starting Docker Desktop manually

echo "=========================================="
echo "üöÄ COMMUNITY PICKUP MARKET LIVE TESTING"
echo "=========================================="
echo ""

echo "üìã Pre-flight Check:"
echo "‚úÖ Order flow producer ID bug fixed"
echo "‚úÖ Backend server Route.get() error fixed"
echo "‚úÖ Database migration script ready"
echo ""

echo "üîß Step 1: Starting Database..."
if docker info > /dev/null 2>&1; then
    echo "‚úÖ Docker is running"
    docker-compose up -d db
    echo "‚è≥ Waiting for database to start..."
    sleep 15
    echo "‚úÖ Database should be ready"
else
    echo "‚ùå Docker not running. Please start Docker Desktop first."
    echo "   Manual steps:"
    echo "   1. Start Docker Desktop"
    echo "   2. Wait for green icon in system tray"
    echo "   3. Run this script again"
    exit 1
fi

echo ""
echo "üóÑÔ∏è Step 2: Applying Database Migration..."
if command -v psql > /dev/null 2>&1; then
    echo "Applying producerId column migration..."
    psql -h localhost -U postgres -d community_market -f add-producer-id-to-cart-items.sql
    echo "‚úÖ Migration applied"
else
    echo "‚ö†Ô∏è psql not found. Manual migration required:"
    echo "   Install PostgreSQL client tools or use Docker:"
    echo "   docker exec -i \$(docker-compose ps -q db) psql -U postgres -d community_market < add-producer-id-to-cart-items.sql"
fi

echo ""
echo "üñ•Ô∏è Step 3: Starting Backend Server..."
echo "Opening new terminal for backend..."
cd server
npm run dev &
BACKEND_PID=$!
cd ..

sleep 5

echo ""
echo "üåê Step 4: Starting Frontend Server..."
echo "Opening new terminal for frontend..."
npm run dev &
FRONTEND_PID=$!

echo ""
echo "=========================================="
echo "üéØ READY FOR TESTING!"
echo "=========================================="
echo ""
echo "üåê Frontend: http://localhost:5173"
echo "üîß Backend:  http://localhost:3001"
echo ""
echo "üìù Testing Checklist:"
echo "‚ñ° Login as customer"
echo "‚ñ° Browse products"
echo "‚ñ° Add items to cart"
echo "‚ñ° Proceed to checkout"
echo "‚ñ° Select pickup point"
echo "‚ñ° Confirm order (should work now!)"
echo "‚ñ° Login as producer"
echo "‚ñ° Test producer information management"
echo ""
echo "üîç What to verify:"
echo "‚úÖ No 'order incomplete' errors after pickup point selection"
echo "‚úÖ Orders created with correct producer IDs (not hardcoded '1')"
echo "‚úÖ Producer information CRUD operations work"
echo "‚úÖ Cart items properly track producer ID"
echo ""
echo "Press Ctrl+C to stop all servers"
wait
